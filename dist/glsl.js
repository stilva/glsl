var GLSL=function(){"use strict";class t{get context(){return this._context}get node(){return this._canvas}get height(){return this._canvas.height}get width(){return this._canvas.width}constructor(t,{width:e,height:i,antialias:r}){this._canvas=t;try{this._context=t.getContext("webgl",{antialias:r})}catch(t){throw new Error(`Error while getting the context. ${t.message}`)}t.width=e,t.height=i}}const e=["uniform1f","uniform2fv","uniform3fv","uniform4fv"];function i(t,i){const r=(a=i,Array.isArray(a)?a:[a]);var a;const s=r.length-1,o=e[s];return{name:t,linked:!1,value:r,type:n(r),location:`${t}Location`,locationType:o}}function r(t,e,i){let r=null;return{apply:s,name:t,index:e,pSource:r="string"==typeof i?a(i):i instanceof Blob?function(t){const e=new FileReader;return new Promise(i=>{e.addEventListener("load",t=>{i(t.target.result)}),e.readAsDataURL(t)})}(i).then(a):Promise.resolve(i),linked:!1}}function a(t){const e=new Image;return e.crossOrigin="Anonymous",new Promise(i=>{e.addEventListener("load",t=>i(e)),e.src=t})}function n(t){return 1==t.length?"float":`vec${t.length}`}function s(){}const o=["lowp","mediump","highp"];return class{get canvas(){return this._canvas.node}constructor(e,i){this._options=Object.assign({antialias:!1,precision:1},i),this._canvas=function(e,i){const r=Object.assign({antialias:!1},i);if(e instanceof HTMLCanvasElement){const i={width:e.width,height:e.height,antialias:r.antialias};return new t(e,i)}if(Array.isArray(e)){const i={width:e[0],height:e[1],antialias:r.antialias},a=document.createElement("canvas");return new t(a,i)}throw new Error("getCanvas expects an HTMLCanvasElement or an Array [width, height]")}(e,this._options),this._gl=this._canvas.context,this._gl.viewport(0,0,this._gl.drawingBufferWidth,this._gl.drawingBufferHeight),this._locations={},this._variables={},this._textures={},this._vertex="attribute vec2 a_position;\n\t\tvoid main() {\n\t\t\tgl_Position = vec4(a_position, 0, 1);\n\t\t}",this._initTime=Date.now(),this.addVariable("u_time",0),this.addVariable("u_resolution",[this._canvas.width,this._canvas.height])}addVariable(t,e){if(this._variables.hasOwnProperty(t))throw new Error(`Variable ${t} has already been added to this instance.`);return this._variables[t]=i(t,e),e=>{const{location:i,locationType:r}=this._variables[t];this._variables[t].value=e,this._gl[r](this._locations[i],this._variables[t].value)}}addTexture(t,e){if(this._textures.hasOwnProperty(t))throw new Error(`Texture ${t} has already been added to this instance.`);const i=Object.keys(this._textures).length;return this._textures[t]=r(t,i,e),e=>{this._textures[t].apply(e)}}fragment(t,...e){const i=Array.isArray(t)?t:[t];if(e.length!==i.length-1)throw new Error("The fragment shader provided has an invalid amount of arguments");var r,a;this._fragment=`precision ${o[this._options.precision]} float;\n\t\t\n\t\t${a=this._variables,Object.keys(a).reduce((t,e)=>`${t}\n\t\tuniform ${a[e].type} ${e};`,"")}\n\t\t\n\t\t${r=this._textures,Object.keys(r).reduce((t,e)=>`${t}\n\t\tuniform sampler2D ${e};`,"")}\n\t\t\n\t\t${i.reduce((t,i,r)=>`${t}${e[r]}${i}`)}`,this._program=function(t,e,i){const r=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,r),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),t.STATIC_DRAW);const a=t.createShader(t.VERTEX_SHADER);t.shaderSource(a,e),t.compileShader(a);const n=t.createShader(t.FRAGMENT_SHADER);t.shaderSource(n,i),t.compileShader(n);const s=t.createProgram();t.attachShader(s,a),t.attachShader(s,n),t.linkProgram(s),t.useProgram(s);const o=t.getAttribLocation(s,"a_position");return t.enableVertexAttribArray(o),t.vertexAttribPointer(o,2,t.FLOAT,!1,0,0),s}(this._gl,this._vertex,this._fragment),Object.keys(this._variables).forEach(t=>{if(this._variables[t].linked)return;const{name:e,location:i,locationType:r}=this._variables[t],a=this._gl.getUniformLocation(this._program,e);this._gl[r](a,this._variables[t].value),this._locations[i]=a,this._variables[t].linked=!0}),Object.keys(this._textures).forEach(t=>{if(this._textures[t].linked)return;const{name:e,index:i,pSource:r}=this._textures[t];this._textures[t].linked=!0;const a=function(t,e,i,r){const a=t.createTexture();t.bindTexture(t.TEXTURE_2D,a),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.uniform1i(t.getUniformLocation(e,r),i);const n=t[`TEXTURE${i}`];return t.activeTexture(n),t.bindTexture(t.TEXTURE_2D,a),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,new ImageData(2,2)),{apply:e=>{t.activeTexture(n),t.bindTexture(t.TEXTURE_2D,a),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,e)},texture:a}}(this._gl,this._program,i+1,e);this._textures[t].apply=a.apply,r.then(t=>{a.apply(t)})})}render(){this._gl.clear(this._gl.COLOR_BUFFER_BIT),this._gl.drawArrays(this._gl.TRIANGLES,0,6);let{locationType:t,location:e}=this._variables.u_time;this._gl[t](this._locations[e],(Date.now()-this._initTime)/1e3),requestAnimationFrame(t=>this.render())}kill(){this._gl.getExtension("WEBGL_lose_context").loseContext(),this._gl.useProgram(null),this._gl.deleteProgram(this._program)}}}();